# ========================================
# BFF GraphQL Service
# ========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff-service
  namespace: microservices
  labels:
    app: bff-service
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bff-service
  template:
    metadata:
      labels:
        app: bff-service
    spec:
      containers:
        - name: bff-graphql
          image: tavilobreno/go-ms-bff:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: HTTP_PORT
              value: "8080"
            - name: ORDER_SERVICE_URL
              value: "order-service:50051"
            - name: PAYMENT_SERVICE_URL
              value: "payment-service:50052"
            - name: USER_SERVICE_URL
              value: "user-service:50053"
            - name: NOTIFICATION_SERVICE_URL
              value: "notification-service:50054"
            - name: CATALOG_SERVICE_URL
              value: "catalog-service:50055"
            - name: JAEGER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: JAEGER_ENDPOINT
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: bff-service
  namespace: microservices
  labels:
    app: bff-service
spec:
  type: LoadBalancer
  selector:
    app: bff-service
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http

---
# ========================================
# Frontend Service
# ========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: tavilobreno/go-ms-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
          env:
            - name: VITE_GRAPHQL_ENDPOINT
              value: "http://bff-service:8080/graphql"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 3001
            initialDelaySeconds: 20
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: microservices
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
