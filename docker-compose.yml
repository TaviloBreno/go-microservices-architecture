services:
  # ---------------------------
  # üê¨ MYSQL DATABASE
  # ---------------------------
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: order_service
    ports:
      - "3307:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s
    networks:
      - micro_net

  # ---------------------------
  # üêá RABBITMQ
  # ---------------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672" # Comunica√ß√£o entre microsservi√ßos
      - "15672:15672" # Painel de administra√ß√£o
    networks:
      - micro_net

  # ---------------------------
  # üîç JAEGER (Tracing)
  # ---------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.55
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686" # UI
      - "4317:4317" # Recebe traces via OTLP
    networks:
      - micro_net

  # ---------------------------
  # üìà PROMETHEUS
  # ---------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - micro_net

  # ---------------------------
  # üìä GRAFANA
  # ---------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - micro_net

  # ---------------------------
  # üöÄ MICROSERVI√áOS EM GO
  # ---------------------------
  user:
    build: ./services/user
    container_name: user-service
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=order_service
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "50051:50051"
    networks:
      - micro_net

  order:
    build: ./services/order
    container_name: order-service
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=order_service
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=orders
    ports:
      - "50053:50053"
    networks:
      - micro_net

  # ---------------------------
  # üß† GRAPHQL GATEWAY (BFF)
  # ---------------------------
  bff:
    build: ./bff
    container_name: bff
    depends_on:
      user:
        condition: service_started
      order:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - micro_net

networks:
  micro_net:
    driver: bridge
